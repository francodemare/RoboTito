   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PE_LDD.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PE_FillMemory,"ax",%progbits
  18              		.align	1
  19              		.global	PE_FillMemory
  20              		.code	16
  21              		.thumb_func
  23              	PE_FillMemory:
  24              	.LFB0:
  25              		.file 1 "../Generated_Code/PE_LDD.c"
   1:../Generated_Code/PE_LDD.c **** /** ###################################################################
   2:../Generated_Code/PE_LDD.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/PE_LDD.c **** **     Filename    : PE_LDD.c
   4:../Generated_Code/PE_LDD.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/PE_LDD.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/PE_LDD.c **** **     Version     : Component 01.025, Driver 01.04, CPU db: 3.00.000
   7:../Generated_Code/PE_LDD.c **** **     Compiler    : GNU C Compiler
   8:../Generated_Code/PE_LDD.c **** **     Date/Time   : 2014-10-03, 19:02, # CodeGen: 1
   9:../Generated_Code/PE_LDD.c **** **     Abstract    :
  10:../Generated_Code/PE_LDD.c **** **
  11:../Generated_Code/PE_LDD.c **** **     Settings    :
  12:../Generated_Code/PE_LDD.c **** **
  13:../Generated_Code/PE_LDD.c **** **
  14:../Generated_Code/PE_LDD.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  15:../Generated_Code/PE_LDD.c **** **     All Rights Reserved.
  16:../Generated_Code/PE_LDD.c **** **     
  17:../Generated_Code/PE_LDD.c **** **     Redistribution and use in source and binary forms, with or without modification,
  18:../Generated_Code/PE_LDD.c **** **     are permitted provided that the following conditions are met:
  19:../Generated_Code/PE_LDD.c **** **     
  20:../Generated_Code/PE_LDD.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  21:../Generated_Code/PE_LDD.c **** **       of conditions and the following disclaimer.
  22:../Generated_Code/PE_LDD.c **** **     
  23:../Generated_Code/PE_LDD.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  24:../Generated_Code/PE_LDD.c **** **       list of conditions and the following disclaimer in the documentation and/or
  25:../Generated_Code/PE_LDD.c **** **       other materials provided with the distribution.
  26:../Generated_Code/PE_LDD.c **** **     
  27:../Generated_Code/PE_LDD.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  28:../Generated_Code/PE_LDD.c **** **       contributors may be used to endorse or promote products derived from this
  29:../Generated_Code/PE_LDD.c **** **       software without specific prior written permission.
  30:../Generated_Code/PE_LDD.c **** **     
  31:../Generated_Code/PE_LDD.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  32:../Generated_Code/PE_LDD.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  33:../Generated_Code/PE_LDD.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  34:../Generated_Code/PE_LDD.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  35:../Generated_Code/PE_LDD.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  36:../Generated_Code/PE_LDD.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  37:../Generated_Code/PE_LDD.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  38:../Generated_Code/PE_LDD.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  39:../Generated_Code/PE_LDD.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  40:../Generated_Code/PE_LDD.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  41:../Generated_Code/PE_LDD.c **** **     
  42:../Generated_Code/PE_LDD.c **** **     http: www.freescale.com
  43:../Generated_Code/PE_LDD.c **** **     mail: support@freescale.com
  44:../Generated_Code/PE_LDD.c **** ** ###################################################################*/
  45:../Generated_Code/PE_LDD.c **** /*!
  46:../Generated_Code/PE_LDD.c **** ** @file PE_LDD.c                                                  
  47:../Generated_Code/PE_LDD.c **** ** @version 01.04
  48:../Generated_Code/PE_LDD.c **** ** @brief
  49:../Generated_Code/PE_LDD.c **** **
  50:../Generated_Code/PE_LDD.c **** */         
  51:../Generated_Code/PE_LDD.c **** /*!
  52:../Generated_Code/PE_LDD.c **** **  @addtogroup PE_LDD_module PE_LDD module documentation
  53:../Generated_Code/PE_LDD.c **** **  @{
  54:../Generated_Code/PE_LDD.c **** */         
  55:../Generated_Code/PE_LDD.c **** 
  56:../Generated_Code/PE_LDD.c **** /* MODULE PE_LDD. */
  57:../Generated_Code/PE_LDD.c **** 
  58:../Generated_Code/PE_LDD.c **** #include "FreeRTOS.h" /* FreeRTOS interface */
  59:../Generated_Code/PE_LDD.c **** /* {FreeRTOS RTOS Adapter} No RTOS driver includes */
  60:../Generated_Code/PE_LDD.c **** 
  61:../Generated_Code/PE_LDD.c **** #include "PE_LDD.h"
  62:../Generated_Code/PE_LDD.c **** #include "Cpu.h"
  63:../Generated_Code/PE_LDD.c **** 
  64:../Generated_Code/PE_LDD.c **** /*lint -esym(765,PE_PeripheralUsed,LDD_SetClockConfiguration,PE_CpuClockConfigurations,PE_FillMemor
  65:../Generated_Code/PE_LDD.c **** 
  66:../Generated_Code/PE_LDD.c **** /*
  67:../Generated_Code/PE_LDD.c **** ** ===========================================================================
  68:../Generated_Code/PE_LDD.c **** ** Array of initialized device structures of LDD components.
  69:../Generated_Code/PE_LDD.c **** ** ===========================================================================
  70:../Generated_Code/PE_LDD.c **** */
  71:../Generated_Code/PE_LDD.c **** LDD_TDeviceData *PE_LDD_DeviceDataList[3] = {
  72:../Generated_Code/PE_LDD.c ****     NULL,
  73:../Generated_Code/PE_LDD.c ****     NULL,
  74:../Generated_Code/PE_LDD.c ****     NULL
  75:../Generated_Code/PE_LDD.c ****   };
  76:../Generated_Code/PE_LDD.c **** 
  77:../Generated_Code/PE_LDD.c **** /*
  78:../Generated_Code/PE_LDD.c **** ** ===========================================================================
  79:../Generated_Code/PE_LDD.c **** ** The array of clock frequencies in configured clock configurations.
  80:../Generated_Code/PE_LDD.c **** ** ===========================================================================
  81:../Generated_Code/PE_LDD.c **** */
  82:../Generated_Code/PE_LDD.c **** /*! The array of clock configurations (frequencies) configured in configured clock configurations o
  83:../Generated_Code/PE_LDD.c **** const TCpuClockConfiguration PE_CpuClockConfigurations[CPU_CLOCK_CONFIG_NUMBER] = {
  84:../Generated_Code/PE_LDD.c ****   /* Clock configuration 0 */
  85:../Generated_Code/PE_LDD.c ****   {
  86:../Generated_Code/PE_LDD.c ****     CPU_CORE_CLK_HZ_CONFIG_0,          /*!< Core clock frequency in clock configuration 0 */
  87:../Generated_Code/PE_LDD.c ****     CPU_BUS_CLK_HZ_CONFIG_0,           /*!< Bus clock frequency in clock configuration 0 */
  88:../Generated_Code/PE_LDD.c ****     CPU_FLEXBUS_CLK_HZ_CONFIG_0,       /*!< Flexbus clock frequency in clock configuration 0 */
  89:../Generated_Code/PE_LDD.c ****     CPU_FLASH_CLK_HZ_CONFIG_0,         /*!< FLASH clock frequency in clock configuration 0 */
  90:../Generated_Code/PE_LDD.c ****     CPU_USB_CLK_HZ_CONFIG_0,           /*!< USB clock frequency in clock configuration 0 */
  91:../Generated_Code/PE_LDD.c ****     CPU_PLL_FLL_CLK_HZ_CONFIG_0,       /*!< PLL/FLL clock frequency in clock configuration 0 */
  92:../Generated_Code/PE_LDD.c ****     CPU_MCGIR_CLK_HZ_CONFIG_0,         /*!< MCG internal reference clock frequency in clock configu
  93:../Generated_Code/PE_LDD.c ****     CPU_OSCER_CLK_HZ_CONFIG_0,         /*!< System OSC external reference clock frequency in clock 
  94:../Generated_Code/PE_LDD.c ****     CPU_ERCLK32K_CLK_HZ_CONFIG_0,      /*!< External reference clock 32k frequency in clock configu
  95:../Generated_Code/PE_LDD.c ****     CPU_MCGFF_CLK_HZ_CONFIG_0          /*!< MCG fixed frequency clock */
  96:../Generated_Code/PE_LDD.c ****   }
  97:../Generated_Code/PE_LDD.c **** };
  98:../Generated_Code/PE_LDD.c **** 
  99:../Generated_Code/PE_LDD.c **** /*
 100:../Generated_Code/PE_LDD.c **** ** ===================================================================
 101:../Generated_Code/PE_LDD.c **** **     Method      :  Cpu_PE_FillMemory (component MKL25Z128LK4)
 102:../Generated_Code/PE_LDD.c **** */
 103:../Generated_Code/PE_LDD.c **** /*!
 104:../Generated_Code/PE_LDD.c **** **     @brief
 105:../Generated_Code/PE_LDD.c **** **         Fills a memory area block by a specified value.
 106:../Generated_Code/PE_LDD.c **** **     @param
 107:../Generated_Code/PE_LDD.c **** **       SourceAddressPtr - Source address pointer.
 108:../Generated_Code/PE_LDD.c **** **     @param
 109:../Generated_Code/PE_LDD.c **** **       c - A value used to fill a memory block.
 110:../Generated_Code/PE_LDD.c **** **     @param
 111:../Generated_Code/PE_LDD.c **** **       len - Length of a memory block to fill.
 112:../Generated_Code/PE_LDD.c **** */
 113:../Generated_Code/PE_LDD.c **** /* ===================================================================*/
 114:../Generated_Code/PE_LDD.c **** void PE_FillMemory(register void* SourceAddressPtr, register uint8_t c, register uint32_t len)
 115:../Generated_Code/PE_LDD.c **** {
  26              		.loc 1 115 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 00B5     		push	{lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 4
  32              		.cfi_offset 14, -4
 116:../Generated_Code/PE_LDD.c ****   register uint8_t *ptr = (uint8_t*)SourceAddressPtr;
 117:../Generated_Code/PE_LDD.c **** 
 118:../Generated_Code/PE_LDD.c ****   if (len > 0U) {
  33              		.loc 1 118 0
  34 0002 002A     		cmp	r2, #0
  35 0004 05D0     		beq	.L1
 114:../Generated_Code/PE_LDD.c **** void PE_FillMemory(register void* SourceAddressPtr, register uint8_t c, register uint32_t len)
  36              		.loc 1 114 0
  37 0006 8218     		add	r2, r0, r2
  38              	.LVL1:
  39              	.L3:
 119:../Generated_Code/PE_LDD.c ****     while (len--) {
  40              		.loc 1 119 0
  41 0008 9042     		cmp	r0, r2
  42 000a 02D0     		beq	.L1
  43              	.L4:
 120:../Generated_Code/PE_LDD.c ****       *ptr++ = c;
  44              		.loc 1 120 0
  45 000c 0170     		strb	r1, [r0]
  46 000e 0130     		add	r0, r0, #1
  47              	.LVL2:
  48 0010 FAE7     		b	.L3
  49              	.L1:
 121:../Generated_Code/PE_LDD.c ****     }
 122:../Generated_Code/PE_LDD.c ****   }
 123:../Generated_Code/PE_LDD.c **** }
  50              		.loc 1 123 0
  51              		@ sp needed for prologue
  52 0012 00BD     		pop	{pc}
  53              		.cfi_endproc
  54              	.LFE0:
  56              		.section	.text.PE_PeripheralUsed,"ax",%progbits
  57              		.align	1
  58              		.global	PE_PeripheralUsed
  59              		.code	16
  60              		.thumb_func
  62              	PE_PeripheralUsed:
  63              	.LFB1:
 124:../Generated_Code/PE_LDD.c **** 
 125:../Generated_Code/PE_LDD.c **** /*
 126:../Generated_Code/PE_LDD.c **** ** ===================================================================
 127:../Generated_Code/PE_LDD.c **** **     Method      :  Cpu_PE_PeripheralUsed (component MKL25Z128LK4)
 128:../Generated_Code/PE_LDD.c **** */
 129:../Generated_Code/PE_LDD.c **** /*!
 130:../Generated_Code/PE_LDD.c **** **     @brief
 131:../Generated_Code/PE_LDD.c **** **         Returns information whether a peripheral is allocated by PEx 
 132:../Generated_Code/PE_LDD.c **** **         or not.
 133:../Generated_Code/PE_LDD.c **** **     @param
 134:../Generated_Code/PE_LDD.c **** **       PrphBaseAddress - Base address of a peripheral.
 135:../Generated_Code/PE_LDD.c **** **     @return
 136:../Generated_Code/PE_LDD.c **** **       TRUE if a peripheral is used by PEx or FALSE if it isn't used.
 137:../Generated_Code/PE_LDD.c **** */
 138:../Generated_Code/PE_LDD.c **** /* ===================================================================*/
 139:../Generated_Code/PE_LDD.c **** bool PE_PeripheralUsed(uint32_t PrphBaseAddress)
 140:../Generated_Code/PE_LDD.c **** {
  64              		.loc 1 140 0
  65              		.cfi_startproc
  66              	.LVL3:
 141:../Generated_Code/PE_LDD.c ****   bool result = FALSE;
 142:../Generated_Code/PE_LDD.c **** 
 143:../Generated_Code/PE_LDD.c ****   switch (PrphBaseAddress) {
  67              		.loc 1 143 0
  68 0000 054B     		ldr	r3, .L11
 140:../Generated_Code/PE_LDD.c **** {
  69              		.loc 1 140 0
  70 0002 00B5     		push	{lr}
  71              	.LCFI1:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74              		.loc 1 143 0
  75 0004 9842     		cmp	r0, r3
  76 0006 04D0     		beq	.L10
  77 0008 0449     		ldr	r1, .L11+4
  78 000a 8842     		cmp	r0, r1
  79 000c 01D0     		beq	.L10
 141:../Generated_Code/PE_LDD.c ****   bool result = FALSE;
  80              		.loc 1 141 0
  81 000e 0020     		mov	r0, #0
  82              	.LVL4:
  83 0010 00E0     		b	.L9
  84              	.LVL5:
  85              	.L10:
 144:../Generated_Code/PE_LDD.c ****     /* Base address allocated by peripheral(s) SysTick */
 145:../Generated_Code/PE_LDD.c ****     case 0xE000E010UL:
 146:../Generated_Code/PE_LDD.c ****     /* Base address allocated by peripheral(s) PTB */
 147:../Generated_Code/PE_LDD.c ****     case 0x400FF040UL:
 148:../Generated_Code/PE_LDD.c ****       result = TRUE;
  86              		.loc 1 148 0
  87 0012 0120     		mov	r0, #1
  88              	.LVL6:
  89              	.L9:
 149:../Generated_Code/PE_LDD.c ****       break;
 150:../Generated_Code/PE_LDD.c ****     default:
 151:../Generated_Code/PE_LDD.c ****       break;
 152:../Generated_Code/PE_LDD.c ****   }
 153:../Generated_Code/PE_LDD.c ****   return result;
 154:../Generated_Code/PE_LDD.c **** }
  90              		.loc 1 154 0
  91              		@ sp needed for prologue
  92 0014 00BD     		pop	{pc}
  93              	.L12:
  94 0016 C046     		.align	2
  95              	.L11:
  96 0018 40F00F40 		.word	1074786368
  97 001c 10E000E0 		.word	-536813552
  98              		.cfi_endproc
  99              	.LFE1:
 101              		.section	.text.LDD_SetClockConfiguration,"ax",%progbits
 102              		.align	1
 103              		.global	LDD_SetClockConfiguration
 104              		.code	16
 105              		.thumb_func
 107              	LDD_SetClockConfiguration:
 108              	.LFB2:
 155:../Generated_Code/PE_LDD.c **** 
 156:../Generated_Code/PE_LDD.c **** /*
 157:../Generated_Code/PE_LDD.c **** ** ===================================================================
 158:../Generated_Code/PE_LDD.c **** **     Method      :  Cpu_LDD_SetClockConfiguration (component MKL25Z128LK4)
 159:../Generated_Code/PE_LDD.c **** */
 160:../Generated_Code/PE_LDD.c **** /*!
 161:../Generated_Code/PE_LDD.c **** **     @brief
 162:../Generated_Code/PE_LDD.c **** **         Changes the clock configuration of all LDD components in a 
 163:../Generated_Code/PE_LDD.c **** **         project.
 164:../Generated_Code/PE_LDD.c **** **     @param
 165:../Generated_Code/PE_LDD.c **** **       ClockConfiguration - New CPU clock configuration changed by CPU SetClockConfiguration meth
 166:../Generated_Code/PE_LDD.c **** */
 167:../Generated_Code/PE_LDD.c **** /* ===================================================================*/
 168:../Generated_Code/PE_LDD.c **** void LDD_SetClockConfiguration(LDD_TClockConfiguration ClockConfiguration)
 169:../Generated_Code/PE_LDD.c **** {
 109              		.loc 1 169 0
 110              		.cfi_startproc
 111              	.LVL7:
 170:../Generated_Code/PE_LDD.c ****   (void)ClockConfiguration;            /*!< Parameter is not used, suppress unused argument warning
 171:../Generated_Code/PE_LDD.c ****   /* Just one clock configuration defined in CPU component. */
 172:../Generated_Code/PE_LDD.c **** }
 112              		.loc 1 172 0
 113              		@ sp needed for prologue
 114 0000 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE2:
 118              		.global	PE_CpuClockConfigurations
 119              		.global	PE_LDD_DeviceDataList
 120              		.section	.rodata.PE_CpuClockConfigurations,"a",%progbits
 121              		.align	2
 124              	PE_CpuClockConfigurations:
 125 0000 00004001 		.word	20971520
 126 0004 00004001 		.word	20971520
 127 0008 00000000 		.word	0
 128 000c 00000000 		.word	0
 129 0010 00000000 		.word	0
 130 0014 00004001 		.word	20971520
 131 0018 00800000 		.word	32768
 132 001c 00000000 		.word	0
 133 0020 00000000 		.word	0
 134 0024 00800000 		.word	32768
 135              		.section	.bss.PE_LDD_DeviceDataList,"aw",%nobits
 136              		.align	2
 139              	PE_LDD_DeviceDataList:
 140 0000 00000000 		.space	12
 140      00000000 
 140      00000000 
 141              		.text
 142              	.Letext0:
 143              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 144              		.file 3 "../Generated_Code/PE_Types.h"
 145              		.file 4 "../Generated_Code/Cpu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 PE_LDD.c
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:18     .text.PE_FillMemory:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:23     .text.PE_FillMemory:00000000 PE_FillMemory
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:57     .text.PE_PeripheralUsed:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:62     .text.PE_PeripheralUsed:00000000 PE_PeripheralUsed
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:96     .text.PE_PeripheralUsed:00000018 $d
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:102    .text.LDD_SetClockConfiguration:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:107    .text.LDD_SetClockConfiguration:00000000 LDD_SetClockConfiguration
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:124    .rodata.PE_CpuClockConfigurations:00000000 PE_CpuClockConfigurations
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:139    .bss.PE_LDD_DeviceDataList:00000000 PE_LDD_DeviceDataList
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:121    .rodata.PE_CpuClockConfigurations:00000000 $d
C:\Users\Franco\AppData\Local\Temp\cc6z89Wc.s:136    .bss.PE_LDD_DeviceDataList:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
