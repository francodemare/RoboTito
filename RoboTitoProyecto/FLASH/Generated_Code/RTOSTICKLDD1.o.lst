   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"RTOSTICKLDD1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RTOSTICKLDD1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	RTOSTICKLDD1_Init
  20              		.code	16
  21              		.thumb_func
  23              	RTOSTICKLDD1_Init:
  24              	.LFB0:
  25              		.file 1 "../Generated_Code/RTOSTICKLDD1.c"
   1:../Generated_Code/RTOSTICKLDD1.c **** /* ###################################################################
   2:../Generated_Code/RTOSTICKLDD1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/RTOSTICKLDD1.c **** **     Filename    : RTOSTICKLDD1.c
   4:../Generated_Code/RTOSTICKLDD1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/RTOSTICKLDD1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/RTOSTICKLDD1.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/RTOSTICKLDD1.c **** **     Version     : Component 01.164, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/RTOSTICKLDD1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/RTOSTICKLDD1.c **** **     Date/Time   : 2014-10-03, 19:02, # CodeGen: 1
  10:../Generated_Code/RTOSTICKLDD1.c **** **     Abstract    :
  11:../Generated_Code/RTOSTICKLDD1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/RTOSTICKLDD1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/RTOSTICKLDD1.c **** **     Settings    :
  14:../Generated_Code/RTOSTICKLDD1.c **** **          Component name                                 : RTOSTICKLDD1
  15:../Generated_Code/RTOSTICKLDD1.c **** **          Module name                                    : SysTick
  16:../Generated_Code/RTOSTICKLDD1.c **** **          Counter                                        : SYST_CVR
  17:../Generated_Code/RTOSTICKLDD1.c **** **          Counter direction                              : Down
  18:../Generated_Code/RTOSTICKLDD1.c **** **          Counter width                                  : 24 bits
  19:../Generated_Code/RTOSTICKLDD1.c **** **          Value type                                     : Optimal
  20:../Generated_Code/RTOSTICKLDD1.c **** **          Input clock source                             : Internal
  21:../Generated_Code/RTOSTICKLDD1.c **** **            Counter frequency                            : Auto select
  22:../Generated_Code/RTOSTICKLDD1.c **** **          Counter restart                                : On-match
  23:../Generated_Code/RTOSTICKLDD1.c **** **            Period device                                : SYST_RVR
  24:../Generated_Code/RTOSTICKLDD1.c **** **            Period                                       : 10 ms
  25:../Generated_Code/RTOSTICKLDD1.c **** **            Interrupt                                    : Enabled
  26:../Generated_Code/RTOSTICKLDD1.c **** **              Interrupt                                  : INT_SysTick
  27:../Generated_Code/RTOSTICKLDD1.c **** **              Interrupt priority                         : medium priority
  28:../Generated_Code/RTOSTICKLDD1.c **** **          Channel list                                   : 0
  29:../Generated_Code/RTOSTICKLDD1.c **** **          Initialization                                 : 
  30:../Generated_Code/RTOSTICKLDD1.c **** **            Enabled in init. code                        : yes
  31:../Generated_Code/RTOSTICKLDD1.c **** **            Auto initialization                          : no
  32:../Generated_Code/RTOSTICKLDD1.c **** **            Event mask                                   : 
  33:../Generated_Code/RTOSTICKLDD1.c **** **              OnCounterRestart                           : Enabled
  34:../Generated_Code/RTOSTICKLDD1.c **** **              OnChannel0                                 : Disabled
  35:../Generated_Code/RTOSTICKLDD1.c **** **              OnChannel1                                 : Disabled
  36:../Generated_Code/RTOSTICKLDD1.c **** **              OnChannel2                                 : Disabled
  37:../Generated_Code/RTOSTICKLDD1.c **** **              OnChannel3                                 : Disabled
  38:../Generated_Code/RTOSTICKLDD1.c **** **              OnChannel4                                 : Disabled
  39:../Generated_Code/RTOSTICKLDD1.c **** **              OnChannel5                                 : Disabled
  40:../Generated_Code/RTOSTICKLDD1.c **** **              OnChannel6                                 : Disabled
  41:../Generated_Code/RTOSTICKLDD1.c **** **              OnChannel7                                 : Disabled
  42:../Generated_Code/RTOSTICKLDD1.c **** **          CPU clock/configuration selection              : 
  43:../Generated_Code/RTOSTICKLDD1.c **** **            Clock configuration 0                        : This component enabled
  44:../Generated_Code/RTOSTICKLDD1.c **** **            Clock configuration 1                        : This component enabled
  45:../Generated_Code/RTOSTICKLDD1.c **** **            Clock configuration 2                        : This component enabled
  46:../Generated_Code/RTOSTICKLDD1.c **** **            Clock configuration 3                        : This component enabled
  47:../Generated_Code/RTOSTICKLDD1.c **** **            Clock configuration 4                        : This component enabled
  48:../Generated_Code/RTOSTICKLDD1.c **** **            Clock configuration 5                        : This component enabled
  49:../Generated_Code/RTOSTICKLDD1.c **** **            Clock configuration 6                        : This component enabled
  50:../Generated_Code/RTOSTICKLDD1.c **** **            Clock configuration 7                        : This component enabled
  51:../Generated_Code/RTOSTICKLDD1.c **** **     Contents    :
  52:../Generated_Code/RTOSTICKLDD1.c **** **         Init            - LDD_TDeviceData* RTOSTICKLDD1_Init(LDD_TUserData *UserDataPtr);
  53:../Generated_Code/RTOSTICKLDD1.c **** **         Deinit          - void RTOSTICKLDD1_Deinit(LDD_TDeviceData *DeviceDataPtr);
  54:../Generated_Code/RTOSTICKLDD1.c **** **         Enable          - LDD_TError RTOSTICKLDD1_Enable(LDD_TDeviceData *DeviceDataPtr);
  55:../Generated_Code/RTOSTICKLDD1.c **** **         Disable         - LDD_TError RTOSTICKLDD1_Disable(LDD_TDeviceData *DeviceDataPtr);
  56:../Generated_Code/RTOSTICKLDD1.c **** **         GetCounterValue - RTOSTICKLDD1_TValueType RTOSTICKLDD1_GetCounterValue(LDD_TDeviceData..
  57:../Generated_Code/RTOSTICKLDD1.c **** **
  58:../Generated_Code/RTOSTICKLDD1.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  59:../Generated_Code/RTOSTICKLDD1.c **** **     All Rights Reserved.
  60:../Generated_Code/RTOSTICKLDD1.c **** **     
  61:../Generated_Code/RTOSTICKLDD1.c **** **     Redistribution and use in source and binary forms, with or without modification,
  62:../Generated_Code/RTOSTICKLDD1.c **** **     are permitted provided that the following conditions are met:
  63:../Generated_Code/RTOSTICKLDD1.c **** **     
  64:../Generated_Code/RTOSTICKLDD1.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  65:../Generated_Code/RTOSTICKLDD1.c **** **       of conditions and the following disclaimer.
  66:../Generated_Code/RTOSTICKLDD1.c **** **     
  67:../Generated_Code/RTOSTICKLDD1.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  68:../Generated_Code/RTOSTICKLDD1.c **** **       list of conditions and the following disclaimer in the documentation and/or
  69:../Generated_Code/RTOSTICKLDD1.c **** **       other materials provided with the distribution.
  70:../Generated_Code/RTOSTICKLDD1.c **** **     
  71:../Generated_Code/RTOSTICKLDD1.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  72:../Generated_Code/RTOSTICKLDD1.c **** **       contributors may be used to endorse or promote products derived from this
  73:../Generated_Code/RTOSTICKLDD1.c **** **       software without specific prior written permission.
  74:../Generated_Code/RTOSTICKLDD1.c **** **     
  75:../Generated_Code/RTOSTICKLDD1.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  76:../Generated_Code/RTOSTICKLDD1.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  77:../Generated_Code/RTOSTICKLDD1.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  78:../Generated_Code/RTOSTICKLDD1.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  79:../Generated_Code/RTOSTICKLDD1.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  80:../Generated_Code/RTOSTICKLDD1.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  81:../Generated_Code/RTOSTICKLDD1.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  82:../Generated_Code/RTOSTICKLDD1.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  83:../Generated_Code/RTOSTICKLDD1.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  84:../Generated_Code/RTOSTICKLDD1.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  85:../Generated_Code/RTOSTICKLDD1.c **** **     
  86:../Generated_Code/RTOSTICKLDD1.c **** **     http: www.freescale.com
  87:../Generated_Code/RTOSTICKLDD1.c **** **     mail: support@freescale.com
  88:../Generated_Code/RTOSTICKLDD1.c **** ** ###################################################################*/
  89:../Generated_Code/RTOSTICKLDD1.c **** /*!
  90:../Generated_Code/RTOSTICKLDD1.c **** ** @file RTOSTICKLDD1.c
  91:../Generated_Code/RTOSTICKLDD1.c **** ** @version 01.11
  92:../Generated_Code/RTOSTICKLDD1.c **** ** @brief
  93:../Generated_Code/RTOSTICKLDD1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  94:../Generated_Code/RTOSTICKLDD1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  95:../Generated_Code/RTOSTICKLDD1.c **** */         
  96:../Generated_Code/RTOSTICKLDD1.c **** /*!
  97:../Generated_Code/RTOSTICKLDD1.c **** **  @addtogroup RTOSTICKLDD1_module RTOSTICKLDD1 module documentation
  98:../Generated_Code/RTOSTICKLDD1.c **** **  @{
  99:../Generated_Code/RTOSTICKLDD1.c **** */         
 100:../Generated_Code/RTOSTICKLDD1.c **** 
 101:../Generated_Code/RTOSTICKLDD1.c **** /* MODULE RTOSTICKLDD1. */
 102:../Generated_Code/RTOSTICKLDD1.c **** 
 103:../Generated_Code/RTOSTICKLDD1.c **** #include "FRTOS1.h"
 104:../Generated_Code/RTOSTICKLDD1.c **** #include "RTOSTICKLDD1.h"
 105:../Generated_Code/RTOSTICKLDD1.c **** #include "FreeRTOS.h" /* FreeRTOS interface */
 106:../Generated_Code/RTOSTICKLDD1.c **** #include "IO_Map.h"
 107:../Generated_Code/RTOSTICKLDD1.c **** 
 108:../Generated_Code/RTOSTICKLDD1.c **** #ifdef __cplusplus
 109:../Generated_Code/RTOSTICKLDD1.c **** extern "C" {
 110:../Generated_Code/RTOSTICKLDD1.c **** #endif 
 111:../Generated_Code/RTOSTICKLDD1.c **** 
 112:../Generated_Code/RTOSTICKLDD1.c **** 
 113:../Generated_Code/RTOSTICKLDD1.c **** typedef struct {
 114:../Generated_Code/RTOSTICKLDD1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 115:../Generated_Code/RTOSTICKLDD1.c **** } RTOSTICKLDD1_TDeviceData;
 116:../Generated_Code/RTOSTICKLDD1.c **** 
 117:../Generated_Code/RTOSTICKLDD1.c **** typedef RTOSTICKLDD1_TDeviceData *RTOSTICKLDD1_TDeviceDataPtr; /* Pointer to the device data struct
 118:../Generated_Code/RTOSTICKLDD1.c **** 
 119:../Generated_Code/RTOSTICKLDD1.c **** /* {FreeRTOS RTOS Adapter} Global variable used for passing a parameter into ISR */
 120:../Generated_Code/RTOSTICKLDD1.c **** static RTOSTICKLDD1_TDeviceDataPtr INT_SysTick__BAREBOARD_RTOS_ISRPARAM;
 121:../Generated_Code/RTOSTICKLDD1.c **** 
 122:../Generated_Code/RTOSTICKLDD1.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERUNIT_ON_COUNTER_RESTART)
 123:../Generated_Code/RTOSTICKLDD1.c **** 
 124:../Generated_Code/RTOSTICKLDD1.c **** /* Internal method prototypes */
 125:../Generated_Code/RTOSTICKLDD1.c **** /*
 126:../Generated_Code/RTOSTICKLDD1.c **** ** ===================================================================
 127:../Generated_Code/RTOSTICKLDD1.c **** **     Method      :  RTOSTICKLDD1_Init (component TimerUnit_LDD)
 128:../Generated_Code/RTOSTICKLDD1.c **** */
 129:../Generated_Code/RTOSTICKLDD1.c **** /*!
 130:../Generated_Code/RTOSTICKLDD1.c **** **     @brief
 131:../Generated_Code/RTOSTICKLDD1.c **** **         Initializes the device. Allocates memory for the device data
 132:../Generated_Code/RTOSTICKLDD1.c **** **         structure, allocates interrupt vectors and sets interrupt
 133:../Generated_Code/RTOSTICKLDD1.c **** **         priority, sets pin routing, sets timing, etc. If the
 134:../Generated_Code/RTOSTICKLDD1.c **** **         property ["Enable in init. code"] is set to "yes" value then
 135:../Generated_Code/RTOSTICKLDD1.c **** **         the device is also enabled (see the description of the
 136:../Generated_Code/RTOSTICKLDD1.c **** **         [Enable] method). In this case the [Enable] method is not
 137:../Generated_Code/RTOSTICKLDD1.c **** **         necessary and needn't to be generated. This method can be
 138:../Generated_Code/RTOSTICKLDD1.c **** **         called only once. Before the second call of Init the [Deinit]
 139:../Generated_Code/RTOSTICKLDD1.c **** **         must be called first.
 140:../Generated_Code/RTOSTICKLDD1.c **** **     @param
 141:../Generated_Code/RTOSTICKLDD1.c **** **         UserDataPtr     - Pointer to the user or
 142:../Generated_Code/RTOSTICKLDD1.c **** **                           RTOS specific data. This pointer will be
 143:../Generated_Code/RTOSTICKLDD1.c **** **                           passed as an event or callback parameter.
 144:../Generated_Code/RTOSTICKLDD1.c **** **     @return
 145:../Generated_Code/RTOSTICKLDD1.c **** **                         - Pointer to the dynamically allocated private
 146:../Generated_Code/RTOSTICKLDD1.c **** **                           structure or NULL if there was an error.
 147:../Generated_Code/RTOSTICKLDD1.c **** */
 148:../Generated_Code/RTOSTICKLDD1.c **** /* ===================================================================*/
 149:../Generated_Code/RTOSTICKLDD1.c **** LDD_TDeviceData* RTOSTICKLDD1_Init(LDD_TUserData *UserDataPtr)
 150:../Generated_Code/RTOSTICKLDD1.c **** {
  26              		.loc 1 150 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 38B5     		push	{r3, r4, r5, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 3, -16
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36              		.loc 1 150 0
  37 0002 041C     		mov	r4, r0
 151:../Generated_Code/RTOSTICKLDD1.c ****   /* Allocate device structure */
 152:../Generated_Code/RTOSTICKLDD1.c ****   RTOSTICKLDD1_TDeviceData *DeviceDataPrv;
 153:../Generated_Code/RTOSTICKLDD1.c ****   /* {FreeRTOS RTOS Adapter} Driver memory allocation: RTOS function call is defined by FreeRTOS RT
 154:../Generated_Code/RTOSTICKLDD1.c ****   DeviceDataPrv = (RTOSTICKLDD1_TDeviceData *)pvPortMalloc(sizeof(RTOSTICKLDD1_TDeviceData));
  38              		.loc 1 154 0
  39 0004 0420     		mov	r0, #4
  40              	.LVL1:
  41 0006 FFF7FEFF 		bl	pvPortMalloc
  42              	.LVL2:
 155:../Generated_Code/RTOSTICKLDD1.c ****   #if FreeRTOS_CHECK_MEMORY_ALLOCATION_ERRORS
 156:../Generated_Code/RTOSTICKLDD1.c ****   if (DeviceDataPrv == NULL) {
 157:../Generated_Code/RTOSTICKLDD1.c ****     return (NULL);
 158:../Generated_Code/RTOSTICKLDD1.c ****   }
 159:../Generated_Code/RTOSTICKLDD1.c ****   #endif
 160:../Generated_Code/RTOSTICKLDD1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 161:../Generated_Code/RTOSTICKLDD1.c ****   /* Interrupt vector(s) allocation */
 162:../Generated_Code/RTOSTICKLDD1.c ****   /* {FreeRTOS RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the gl
 163:../Generated_Code/RTOSTICKLDD1.c ****   INT_SysTick__BAREBOARD_RTOS_ISRPARAM = DeviceDataPrv;
  43              		.loc 1 163 0
  44 000a 0C4B     		ldr	r3, .L2
 164:../Generated_Code/RTOSTICKLDD1.c ****   /* SYST_CSR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNTFLAG
 165:../Generated_Code/RTOSTICKLDD1.c ****   SYST_CSR = 0x00U;                    /* Clear control register */
 166:../Generated_Code/RTOSTICKLDD1.c ****   /* SYST_RVR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,RELOAD=0x00033332 */
 167:../Generated_Code/RTOSTICKLDD1.c ****   SYST_RVR = SysTick_RVR_RELOAD(0x00033332); /* Setup reload value */
  45              		.loc 1 167 0
  46 000c 0C49     		ldr	r1, .L2+4
 163:../Generated_Code/RTOSTICKLDD1.c ****   INT_SysTick__BAREBOARD_RTOS_ISRPARAM = DeviceDataPrv;
  47              		.loc 1 163 0
  48 000e 1860     		str	r0, [r3]
 165:../Generated_Code/RTOSTICKLDD1.c ****   SYST_CSR = 0x00U;                    /* Clear control register */
  49              		.loc 1 165 0
  50 0010 0C4B     		ldr	r3, .L2+8
  51 0012 0022     		mov	r2, #0
 160:../Generated_Code/RTOSTICKLDD1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  52              		.loc 1 160 0
  53 0014 0460     		str	r4, [r0]
 168:../Generated_Code/RTOSTICKLDD1.c ****   /* SYST_CVR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,CURRENT=0 */
 169:../Generated_Code/RTOSTICKLDD1.c ****   SYST_CVR = SysTick_CVR_CURRENT(0x00); /* Clear current value */
 170:../Generated_Code/RTOSTICKLDD1.c ****   /* SCB_SHPR3: PRI_15=0x80 */
 171:../Generated_Code/RTOSTICKLDD1.c ****   SCB_SHPR3 = (uint32_t)((SCB_SHPR3 & (uint32_t)~(uint32_t)(
  54              		.loc 1 171 0
  55 0016 D225     		mov	r5, #210
 165:../Generated_Code/RTOSTICKLDD1.c ****   SYST_CSR = 0x00U;                    /* Clear control register */
  56              		.loc 1 165 0
  57 0018 1A60     		str	r2, [r3]
 167:../Generated_Code/RTOSTICKLDD1.c ****   SYST_RVR = SysTick_RVR_RELOAD(0x00033332); /* Setup reload value */
  58              		.loc 1 167 0
  59 001a 5960     		str	r1, [r3, #4]
  60              		.loc 1 171 0
  61 001c 0A49     		ldr	r1, .L2+12
 169:../Generated_Code/RTOSTICKLDD1.c ****   SYST_CVR = SysTick_CVR_CURRENT(0x00); /* Clear current value */
  62              		.loc 1 169 0
  63 001e 9A60     		str	r2, [r3, #8]
  64              		.loc 1 171 0
  65 0020 2A01     		lsl	r2, r5, #4
  66 0022 8C58     		ldr	r4, [r1, r2]
  67              	.LVL3:
 172:../Generated_Code/RTOSTICKLDD1.c ****                SCB_SHPR3_PRI_15(0x7F)
 173:../Generated_Code/RTOSTICKLDD1.c ****               )) | (uint32_t)(
 174:../Generated_Code/RTOSTICKLDD1.c ****                SCB_SHPR3_PRI_15(0x80)
 175:../Generated_Code/RTOSTICKLDD1.c ****               ));
 176:../Generated_Code/RTOSTICKLDD1.c ****   /* SYST_CSR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUNTFLAG
 177:../Generated_Code/RTOSTICKLDD1.c ****   SYST_CSR = SysTick_CSR_CLKSOURCE_MASK |
 178:../Generated_Code/RTOSTICKLDD1.c ****              SysTick_CSR_TICKINT_MASK |
 179:../Generated_Code/RTOSTICKLDD1.c ****              SysTick_CSR_ENABLE_MASK;  /* Set up control register */
 180:../Generated_Code/RTOSTICKLDD1.c ****   /* Registration of the device structure */
 181:../Generated_Code/RTOSTICKLDD1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_RTOSTICKLDD1_ID,DeviceDataPrv);
 182:../Generated_Code/RTOSTICKLDD1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 183:../Generated_Code/RTOSTICKLDD1.c **** }
  68              		.loc 1 183 0
  69              		@ sp needed for prologue
 171:../Generated_Code/RTOSTICKLDD1.c ****   SCB_SHPR3 = (uint32_t)((SCB_SHPR3 & (uint32_t)~(uint32_t)(
  70              		.loc 1 171 0
  71 0024 2502     		lsl	r5, r4, #8
  72 0026 8024     		mov	r4, #128
  73 0028 2D0A     		lsr	r5, r5, #8
  74 002a 2406     		lsl	r4, r4, #24
  75 002c 2C43     		orr	r4, r5
  76 002e 8C50     		str	r4, [r1, r2]
 177:../Generated_Code/RTOSTICKLDD1.c ****   SYST_CSR = SysTick_CSR_CLKSOURCE_MASK |
  77              		.loc 1 177 0
  78 0030 0721     		mov	r1, #7
  79 0032 1960     		str	r1, [r3]
 181:../Generated_Code/RTOSTICKLDD1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_RTOSTICKLDD1_ID,DeviceDataPrv);
  80              		.loc 1 181 0
  81 0034 054B     		ldr	r3, .L2+16
  82 0036 1860     		str	r0, [r3]
  83              		.loc 1 183 0
  84 0038 38BD     		pop	{r3, r4, r5, pc}
  85              	.L3:
  86 003a C046     		.align	2
  87              	.L2:
  88 003c 00000000 		.word	.LANCHOR0
  89 0040 32330300 		.word	209714
  90 0044 10E000E0 		.word	-536813552
  91 0048 00E000E0 		.word	-536813568
  92 004c 00000000 		.word	PE_LDD_DeviceDataList
  93              		.cfi_endproc
  94              	.LFE0:
  96              		.section	.text.RTOSTICKLDD1_Deinit,"ax",%progbits
  97              		.align	1
  98              		.global	RTOSTICKLDD1_Deinit
  99              		.code	16
 100              		.thumb_func
 102              	RTOSTICKLDD1_Deinit:
 103              	.LFB1:
 184:../Generated_Code/RTOSTICKLDD1.c **** 
 185:../Generated_Code/RTOSTICKLDD1.c **** /*
 186:../Generated_Code/RTOSTICKLDD1.c **** ** ===================================================================
 187:../Generated_Code/RTOSTICKLDD1.c **** **     Method      :  RTOSTICKLDD1_Deinit (component TimerUnit_LDD)
 188:../Generated_Code/RTOSTICKLDD1.c **** */
 189:../Generated_Code/RTOSTICKLDD1.c **** /*!
 190:../Generated_Code/RTOSTICKLDD1.c **** **     @brief
 191:../Generated_Code/RTOSTICKLDD1.c **** **         Deinitializes the device. Switches off the device, frees the
 192:../Generated_Code/RTOSTICKLDD1.c **** **         device data structure memory, interrupts vectors, etc.
 193:../Generated_Code/RTOSTICKLDD1.c **** **     @param
 194:../Generated_Code/RTOSTICKLDD1.c **** **         DeviceDataPtr   - Device data structure
 195:../Generated_Code/RTOSTICKLDD1.c **** **                           pointer returned by Init method
 196:../Generated_Code/RTOSTICKLDD1.c **** */
 197:../Generated_Code/RTOSTICKLDD1.c **** /* ===================================================================*/
 198:../Generated_Code/RTOSTICKLDD1.c **** void RTOSTICKLDD1_Deinit(LDD_TDeviceData *DeviceDataPtr)
 199:../Generated_Code/RTOSTICKLDD1.c **** {
 104              		.loc 1 199 0
 105              		.cfi_startproc
 106              	.LVL4:
 200:../Generated_Code/RTOSTICKLDD1.c ****   RTOSTICKLDD1_TDeviceData *DeviceDataPrv = (RTOSTICKLDD1_TDeviceData *)DeviceDataPtr;
 201:../Generated_Code/RTOSTICKLDD1.c **** 
 202:../Generated_Code/RTOSTICKLDD1.c ****   (void)DeviceDataPrv;
 203:../Generated_Code/RTOSTICKLDD1.c ****   SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_DISABLE);
 107              		.loc 1 203 0
 108 0000 044B     		ldr	r3, .L5
 109 0002 0121     		mov	r1, #1
 110 0004 1A68     		ldr	r2, [r3]
 204:../Generated_Code/RTOSTICKLDD1.c ****   /* Interrupt vector(s) deallocation */
 205:../Generated_Code/RTOSTICKLDD1.c ****   /* {FreeRTOS RTOS Adapter} Restore interrupt vector: IVT is static, no code is generated */
 206:../Generated_Code/RTOSTICKLDD1.c ****   /* Unregistration of the device structure */
 207:../Generated_Code/RTOSTICKLDD1.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_RTOSTICKLDD1_ID);
 111              		.loc 1 207 0
 112 0006 0020     		mov	r0, #0
 113              	.LVL5:
 203:../Generated_Code/RTOSTICKLDD1.c ****   SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_DISABLE);
 114              		.loc 1 203 0
 115 0008 8A43     		bic	r2, r1
 116 000a 1A60     		str	r2, [r3]
 117              		.loc 1 207 0
 118 000c 024B     		ldr	r3, .L5+4
 208:../Generated_Code/RTOSTICKLDD1.c ****   /* Deallocation of the device structure */
 209:../Generated_Code/RTOSTICKLDD1.c ****   /* {FreeRTOS RTOS Adapter} Driver memory deallocation: RTOS function call is defined by FreeRTOS 
 210:../Generated_Code/RTOSTICKLDD1.c ****   #if FRTOS_MEMORY_SCHEME != 1 /* scheme 1 has no deallocate */
 211:../Generated_Code/RTOSTICKLDD1.c ****   vPortFree(DeviceDataPrv);
 212:../Generated_Code/RTOSTICKLDD1.c ****   #endif
 213:../Generated_Code/RTOSTICKLDD1.c **** }
 119              		.loc 1 213 0
 120              		@ sp needed for prologue
 207:../Generated_Code/RTOSTICKLDD1.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_RTOSTICKLDD1_ID);
 121              		.loc 1 207 0
 122 000e 1860     		str	r0, [r3]
 123              		.loc 1 213 0
 124 0010 7047     		bx	lr
 125              	.L6:
 126 0012 C046     		.align	2
 127              	.L5:
 128 0014 10E000E0 		.word	-536813552
 129 0018 00000000 		.word	PE_LDD_DeviceDataList
 130              		.cfi_endproc
 131              	.LFE1:
 133              		.section	.text.RTOSTICKLDD1_Enable,"ax",%progbits
 134              		.align	1
 135              		.global	RTOSTICKLDD1_Enable
 136              		.code	16
 137              		.thumb_func
 139              	RTOSTICKLDD1_Enable:
 140              	.LFB2:
 214:../Generated_Code/RTOSTICKLDD1.c **** 
 215:../Generated_Code/RTOSTICKLDD1.c **** /*
 216:../Generated_Code/RTOSTICKLDD1.c **** ** ===================================================================
 217:../Generated_Code/RTOSTICKLDD1.c **** **     Method      :  RTOSTICKLDD1_Enable (component TimerUnit_LDD)
 218:../Generated_Code/RTOSTICKLDD1.c **** */
 219:../Generated_Code/RTOSTICKLDD1.c **** /*!
 220:../Generated_Code/RTOSTICKLDD1.c **** **     @brief
 221:../Generated_Code/RTOSTICKLDD1.c **** **         Enables the component - it starts the signal generation.
 222:../Generated_Code/RTOSTICKLDD1.c **** **         Events may be generated (see SetEventMask). The method is
 223:../Generated_Code/RTOSTICKLDD1.c **** **         not available if the counter can't be disabled/enabled by HW.
 224:../Generated_Code/RTOSTICKLDD1.c **** **     @param
 225:../Generated_Code/RTOSTICKLDD1.c **** **         DeviceDataPtr   - Device data structure
 226:../Generated_Code/RTOSTICKLDD1.c **** **                           pointer returned by [Init] method.
 227:../Generated_Code/RTOSTICKLDD1.c **** **     @return
 228:../Generated_Code/RTOSTICKLDD1.c **** **                         - Error code, possible codes:
 229:../Generated_Code/RTOSTICKLDD1.c **** **                           ERR_OK - OK
 230:../Generated_Code/RTOSTICKLDD1.c **** **                           ERR_SPEED - The component does not work in
 231:../Generated_Code/RTOSTICKLDD1.c **** **                           the active clock configuration
 232:../Generated_Code/RTOSTICKLDD1.c **** */
 233:../Generated_Code/RTOSTICKLDD1.c **** /* ===================================================================*/
 234:../Generated_Code/RTOSTICKLDD1.c **** LDD_TError RTOSTICKLDD1_Enable(LDD_TDeviceData *DeviceDataPtr)
 235:../Generated_Code/RTOSTICKLDD1.c **** {
 141              		.loc 1 235 0
 142              		.cfi_startproc
 143              	.LVL6:
 236:../Generated_Code/RTOSTICKLDD1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 237:../Generated_Code/RTOSTICKLDD1.c ****   SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_ENABLE); /* Enable the device */
 144              		.loc 1 237 0
 145 0000 034B     		ldr	r3, .L8
 146 0002 0121     		mov	r1, #1
 147 0004 1A68     		ldr	r2, [r3]
 238:../Generated_Code/RTOSTICKLDD1.c ****   return ERR_OK;
 239:../Generated_Code/RTOSTICKLDD1.c **** }
 148              		.loc 1 239 0
 149 0006 0020     		mov	r0, #0
 150              	.LVL7:
 237:../Generated_Code/RTOSTICKLDD1.c ****   SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_ENABLE); /* Enable the device */
 151              		.loc 1 237 0
 152 0008 0A43     		orr	r2, r1
 153 000a 1A60     		str	r2, [r3]
 154              		.loc 1 239 0
 155              		@ sp needed for prologue
 156 000c 7047     		bx	lr
 157              	.L9:
 158 000e C046     		.align	2
 159              	.L8:
 160 0010 10E000E0 		.word	-536813552
 161              		.cfi_endproc
 162              	.LFE2:
 164              		.section	.text.RTOSTICKLDD1_Disable,"ax",%progbits
 165              		.align	1
 166              		.global	RTOSTICKLDD1_Disable
 167              		.code	16
 168              		.thumb_func
 170              	RTOSTICKLDD1_Disable:
 171              	.LFB3:
 240:../Generated_Code/RTOSTICKLDD1.c **** 
 241:../Generated_Code/RTOSTICKLDD1.c **** /*
 242:../Generated_Code/RTOSTICKLDD1.c **** ** ===================================================================
 243:../Generated_Code/RTOSTICKLDD1.c **** **     Method      :  RTOSTICKLDD1_Disable (component TimerUnit_LDD)
 244:../Generated_Code/RTOSTICKLDD1.c **** */
 245:../Generated_Code/RTOSTICKLDD1.c **** /*!
 246:../Generated_Code/RTOSTICKLDD1.c **** **     @brief
 247:../Generated_Code/RTOSTICKLDD1.c **** **         Disables the component - it stops signal generation and
 248:../Generated_Code/RTOSTICKLDD1.c **** **         events calling. The method is not available if the counter
 249:../Generated_Code/RTOSTICKLDD1.c **** **         can't be disabled/enabled by HW.
 250:../Generated_Code/RTOSTICKLDD1.c **** **     @param
 251:../Generated_Code/RTOSTICKLDD1.c **** **         DeviceDataPtr   - Device data structure
 252:../Generated_Code/RTOSTICKLDD1.c **** **                           pointer returned by [Init] method.
 253:../Generated_Code/RTOSTICKLDD1.c **** **     @return
 254:../Generated_Code/RTOSTICKLDD1.c **** **                         - Error code, possible codes:
 255:../Generated_Code/RTOSTICKLDD1.c **** **                           ERR_OK - OK
 256:../Generated_Code/RTOSTICKLDD1.c **** **                           ERR_SPEED - The component does not work in
 257:../Generated_Code/RTOSTICKLDD1.c **** **                           the active clock configuration
 258:../Generated_Code/RTOSTICKLDD1.c **** */
 259:../Generated_Code/RTOSTICKLDD1.c **** /* ===================================================================*/
 260:../Generated_Code/RTOSTICKLDD1.c **** LDD_TError RTOSTICKLDD1_Disable(LDD_TDeviceData *DeviceDataPtr)
 261:../Generated_Code/RTOSTICKLDD1.c **** {
 172              		.loc 1 261 0
 173              		.cfi_startproc
 174              	.LVL8:
 262:../Generated_Code/RTOSTICKLDD1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 263:../Generated_Code/RTOSTICKLDD1.c ****   SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_DISABLE);
 175              		.loc 1 263 0
 176 0000 034B     		ldr	r3, .L11
 177 0002 0121     		mov	r1, #1
 178 0004 1A68     		ldr	r2, [r3]
 264:../Generated_Code/RTOSTICKLDD1.c ****   return ERR_OK;
 265:../Generated_Code/RTOSTICKLDD1.c **** }
 179              		.loc 1 265 0
 180 0006 0020     		mov	r0, #0
 181              	.LVL9:
 263:../Generated_Code/RTOSTICKLDD1.c ****   SysTick_PDD_EnableDevice(SysTick_BASE_PTR, PDD_DISABLE);
 182              		.loc 1 263 0
 183 0008 8A43     		bic	r2, r1
 184 000a 1A60     		str	r2, [r3]
 185              		.loc 1 265 0
 186              		@ sp needed for prologue
 187 000c 7047     		bx	lr
 188              	.L12:
 189 000e C046     		.align	2
 190              	.L11:
 191 0010 10E000E0 		.word	-536813552
 192              		.cfi_endproc
 193              	.LFE3:
 195              		.section	.text.RTOSTICKLDD1_GetCounterValue,"ax",%progbits
 196              		.align	1
 197              		.global	RTOSTICKLDD1_GetCounterValue
 198              		.code	16
 199              		.thumb_func
 201              	RTOSTICKLDD1_GetCounterValue:
 202              	.LFB4:
 266:../Generated_Code/RTOSTICKLDD1.c **** 
 267:../Generated_Code/RTOSTICKLDD1.c **** /*
 268:../Generated_Code/RTOSTICKLDD1.c **** ** ===================================================================
 269:../Generated_Code/RTOSTICKLDD1.c **** **     Method      :  RTOSTICKLDD1_GetCounterValue (component TimerUnit_LDD)
 270:../Generated_Code/RTOSTICKLDD1.c **** */
 271:../Generated_Code/RTOSTICKLDD1.c **** /*!
 272:../Generated_Code/RTOSTICKLDD1.c **** **     @brief
 273:../Generated_Code/RTOSTICKLDD1.c **** **         Returns the content of counter register. This method can be
 274:../Generated_Code/RTOSTICKLDD1.c **** **         used both if counter is enabled and if counter is disabled.
 275:../Generated_Code/RTOSTICKLDD1.c **** **         The method is not available if HW doesn't allow reading of
 276:../Generated_Code/RTOSTICKLDD1.c **** **         the counter.
 277:../Generated_Code/RTOSTICKLDD1.c **** **     @param
 278:../Generated_Code/RTOSTICKLDD1.c **** **         DeviceDataPtr   - Device data structure
 279:../Generated_Code/RTOSTICKLDD1.c **** **                           pointer returned by [Init] method.
 280:../Generated_Code/RTOSTICKLDD1.c **** **     @return
 281:../Generated_Code/RTOSTICKLDD1.c **** **                         - Counter value (number of counted ticks).
 282:../Generated_Code/RTOSTICKLDD1.c **** */
 283:../Generated_Code/RTOSTICKLDD1.c **** /* ===================================================================*/
 284:../Generated_Code/RTOSTICKLDD1.c **** RTOSTICKLDD1_TValueType RTOSTICKLDD1_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 285:../Generated_Code/RTOSTICKLDD1.c **** {
 203              		.loc 1 285 0
 204              		.cfi_startproc
 205              	.LVL10:
 286:../Generated_Code/RTOSTICKLDD1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 287:../Generated_Code/RTOSTICKLDD1.c ****   return (RTOSTICKLDD1_TValueType)SysTick_PDD_ReadCurrentValueReg(SysTick_BASE_PTR);
 206              		.loc 1 287 0
 207 0000 014B     		ldr	r3, .L14
 288:../Generated_Code/RTOSTICKLDD1.c **** }
 208              		.loc 1 288 0
 209              		@ sp needed for prologue
 287:../Generated_Code/RTOSTICKLDD1.c ****   return (RTOSTICKLDD1_TValueType)SysTick_PDD_ReadCurrentValueReg(SysTick_BASE_PTR);
 210              		.loc 1 287 0
 211 0002 9868     		ldr	r0, [r3, #8]
 212              	.LVL11:
 213              		.loc 1 288 0
 214 0004 7047     		bx	lr
 215              	.L15:
 216 0006 C046     		.align	2
 217              	.L14:
 218 0008 10E000E0 		.word	-536813552
 219              		.cfi_endproc
 220              	.LFE4:
 222              		.section	.text.RTOSTICKLDD1_Interrupt,"ax",%progbits
 223              		.align	1
 224              		.global	RTOSTICKLDD1_Interrupt
 225              		.code	16
 226              		.thumb_func
 228              	RTOSTICKLDD1_Interrupt:
 229              	.LFB5:
 289:../Generated_Code/RTOSTICKLDD1.c **** 
 290:../Generated_Code/RTOSTICKLDD1.c **** /*
 291:../Generated_Code/RTOSTICKLDD1.c **** ** ===================================================================
 292:../Generated_Code/RTOSTICKLDD1.c **** **     Method      :  RTOSTICKLDD1_Interrupt (component TimerUnit_LDD)
 293:../Generated_Code/RTOSTICKLDD1.c **** **
 294:../Generated_Code/RTOSTICKLDD1.c **** **     Description :
 295:../Generated_Code/RTOSTICKLDD1.c **** **         The method services the interrupt of the selected peripheral(s)
 296:../Generated_Code/RTOSTICKLDD1.c **** **         and eventually invokes event(s) of the component.
 297:../Generated_Code/RTOSTICKLDD1.c **** **         This method is internal. It is used by Processor Expert only.
 298:../Generated_Code/RTOSTICKLDD1.c **** ** ===================================================================
 299:../Generated_Code/RTOSTICKLDD1.c **** */
 300:../Generated_Code/RTOSTICKLDD1.c **** PE_ISR(RTOSTICKLDD1_Interrupt)
 301:../Generated_Code/RTOSTICKLDD1.c **** {
 230              		.loc 1 301 0
 231              		.cfi_startproc
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI1:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 302:../Generated_Code/RTOSTICKLDD1.c ****   /* {FreeRTOS RTOS Adapter} ISR parameter is passed through the global variable */
 303:../Generated_Code/RTOSTICKLDD1.c ****   RTOSTICKLDD1_TDeviceDataPtr DeviceDataPrv = INT_SysTick__BAREBOARD_RTOS_ISRPARAM;
 237              		.loc 1 303 0
 238 0002 054B     		ldr	r3, .L17
 304:../Generated_Code/RTOSTICKLDD1.c **** 
 305:../Generated_Code/RTOSTICKLDD1.c ****   SysTick_PDD_ClearInterruptFlag(SysTick_BASE_PTR); /* Clear interrupt flag */
 239              		.loc 1 305 0
 240 0004 0549     		ldr	r1, .L17+4
 303:../Generated_Code/RTOSTICKLDD1.c ****   RTOSTICKLDD1_TDeviceDataPtr DeviceDataPrv = INT_SysTick__BAREBOARD_RTOS_ISRPARAM;
 241              		.loc 1 303 0
 242 0006 1A68     		ldr	r2, [r3]
 243              	.LVL12:
 244              		.loc 1 305 0
 245 0008 054B     		ldr	r3, .L17+8
 306:../Generated_Code/RTOSTICKLDD1.c ****   RTOSTICKLDD1_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 307:../Generated_Code/RTOSTICKLDD1.c **** }
 246              		.loc 1 307 0
 247              		@ sp needed for prologue
 305:../Generated_Code/RTOSTICKLDD1.c ****   SysTick_PDD_ClearInterruptFlag(SysTick_BASE_PTR); /* Clear interrupt flag */
 248              		.loc 1 305 0
 249 000a 1868     		ldr	r0, [r3]
 250 000c 0140     		and	r1, r0
 251 000e 1960     		str	r1, [r3]
 306:../Generated_Code/RTOSTICKLDD1.c ****   RTOSTICKLDD1_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 252              		.loc 1 306 0
 253 0010 1068     		ldr	r0, [r2]
 254 0012 FFF7FEFF 		bl	RTOSTICKLDD1_OnCounterRestart
 255              	.LVL13:
 256              		.loc 1 307 0
 257 0016 08BD     		pop	{r3, pc}
 258              	.L18:
 259              		.align	2
 260              	.L17:
 261 0018 00000000 		.word	.LANCHOR0
 262 001c FFFFFEFF 		.word	-65537
 263 0020 10E000E0 		.word	-536813552
 264              		.cfi_endproc
 265              	.LFE5:
 267              		.section	.bss.INT_SysTick__BAREBOARD_RTOS_ISRPARAM,"aw",%nobits
 268              		.align	2
 269              		.set	.LANCHOR0,. + 0
 272              	INT_SysTick__BAREBOARD_RTOS_ISRPARAM:
 273 0000 00000000 		.space	4
 274              		.text
 275              	.Letext0:
 276              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 277              		.file 3 "../Generated_Code/PE_Types.h"
 278              		.file 4 "C:/Freescale/CW MCU v10.6/MCU/ProcessorExpert/lib/Kinetis/iofiles/MKL25Z4.h"
 279              		.file 5 "../Generated_Code/RTOSTICKLDD1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RTOSTICKLDD1.c
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:18     .text.RTOSTICKLDD1_Init:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:23     .text.RTOSTICKLDD1_Init:00000000 RTOSTICKLDD1_Init
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:88     .text.RTOSTICKLDD1_Init:0000003c $d
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:97     .text.RTOSTICKLDD1_Deinit:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:102    .text.RTOSTICKLDD1_Deinit:00000000 RTOSTICKLDD1_Deinit
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:128    .text.RTOSTICKLDD1_Deinit:00000014 $d
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:134    .text.RTOSTICKLDD1_Enable:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:139    .text.RTOSTICKLDD1_Enable:00000000 RTOSTICKLDD1_Enable
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:160    .text.RTOSTICKLDD1_Enable:00000010 $d
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:165    .text.RTOSTICKLDD1_Disable:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:170    .text.RTOSTICKLDD1_Disable:00000000 RTOSTICKLDD1_Disable
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:191    .text.RTOSTICKLDD1_Disable:00000010 $d
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:196    .text.RTOSTICKLDD1_GetCounterValue:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:201    .text.RTOSTICKLDD1_GetCounterValue:00000000 RTOSTICKLDD1_GetCounterValue
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:218    .text.RTOSTICKLDD1_GetCounterValue:00000008 $d
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:223    .text.RTOSTICKLDD1_Interrupt:00000000 $t
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:228    .text.RTOSTICKLDD1_Interrupt:00000000 RTOSTICKLDD1_Interrupt
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:261    .text.RTOSTICKLDD1_Interrupt:00000018 $d
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:268    .bss.INT_SysTick__BAREBOARD_RTOS_ISRPARAM:00000000 $d
C:\Users\Franco\AppData\Local\Temp\cc0GRmCk.s:272    .bss.INT_SysTick__BAREBOARD_RTOS_ISRPARAM:00000000 INT_SysTick__BAREBOARD_RTOS_ISRPARAM
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
pvPortMalloc
PE_LDD_DeviceDataList
RTOSTICKLDD1_OnCounterRestart
