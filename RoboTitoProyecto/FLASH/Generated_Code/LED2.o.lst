   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LED2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LED2_Deinit,"ax",%progbits
  18              		.align	1
  19              		.global	LED2_Deinit
  20              		.code	16
  21              		.thumb_func
  23              	LED2_Deinit:
  24              	.LFB0:
  25              		.file 1 "../Generated_Code/LED2.c"
   1:../Generated_Code/LED2.c **** /* ###################################################################
   2:../Generated_Code/LED2.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/LED2.c **** **     Filename    : LED2.c
   4:../Generated_Code/LED2.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/LED2.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/LED2.c **** **     Component   : LED
   7:../Generated_Code/LED2.c **** **     Version     : Component 01.054, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/LED2.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/LED2.c **** **     Date/Time   : 2014-10-03, 19:02, # CodeGen: 1
  10:../Generated_Code/LED2.c **** **     Abstract    :
  11:../Generated_Code/LED2.c **** **          This component implements a universal driver for a single LED.
  12:../Generated_Code/LED2.c **** **     Settings    :
  13:../Generated_Code/LED2.c **** **          Component name                                 : LED2
  14:../Generated_Code/LED2.c **** **          Turned On with initialization                  : no
  15:../Generated_Code/LED2.c **** **          HW Interface                                   : 
  16:../Generated_Code/LED2.c **** **            On/Off                                       : Enabled
  17:../Generated_Code/LED2.c **** **              Pin                                        : LEDpin
  18:../Generated_Code/LED2.c **** **            PWM                                          : Disabled
  19:../Generated_Code/LED2.c **** **            High Value means ON                          : no
  20:../Generated_Code/LED2.c **** **          Shell                                          : Disabled
  21:../Generated_Code/LED2.c **** **     Contents    :
  22:../Generated_Code/LED2.c **** **         Init       - void LED2_Init(void);
  23:../Generated_Code/LED2.c **** **         Deinit     - void LED2_Deinit(void);
  24:../Generated_Code/LED2.c **** **         On         - void LED2_On(void);
  25:../Generated_Code/LED2.c **** **         Off        - void LED2_Off(void);
  26:../Generated_Code/LED2.c **** **         Neg        - void LED2_Neg(void);
  27:../Generated_Code/LED2.c **** **         Get        - byte LED2_Get(void);
  28:../Generated_Code/LED2.c **** **         Put        - void LED2_Put(byte val);
  29:../Generated_Code/LED2.c **** **         SetRatio16 - void LED2_SetRatio16(word ratio);
  30:../Generated_Code/LED2.c **** **
  31:../Generated_Code/LED2.c **** **     License   :  Open Source (LGPL)
  32:../Generated_Code/LED2.c **** **     Copyright : (c) Copyright Erich Styger, 2012, all rights reserved.
  33:../Generated_Code/LED2.c **** **     Web: http://mcuoneclipse.com
  34:../Generated_Code/LED2.c **** **     This an open source software implementing an LED driver using Processor Expert.
  35:../Generated_Code/LED2.c **** **     This is a free software and is opened for education, research and commercial developments un
  36:../Generated_Code/LED2.c **** **     * This is a free software and there is NO WARRANTY.
  37:../Generated_Code/LED2.c **** **     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or
  38:../Generated_Code/LED2.c **** **     * Redistributions of source code must retain the above copyright notice.
  39:../Generated_Code/LED2.c **** ** ###################################################################*/
  40:../Generated_Code/LED2.c **** /*!
  41:../Generated_Code/LED2.c **** ** @file LED2.c
  42:../Generated_Code/LED2.c **** ** @version 01.00
  43:../Generated_Code/LED2.c **** ** @brief
  44:../Generated_Code/LED2.c **** **          This component implements a universal driver for a single LED.
  45:../Generated_Code/LED2.c **** */         
  46:../Generated_Code/LED2.c **** /*!
  47:../Generated_Code/LED2.c **** **  @addtogroup LED2_module LED2 module documentation
  48:../Generated_Code/LED2.c **** **  @{
  49:../Generated_Code/LED2.c **** */         
  50:../Generated_Code/LED2.c **** 
  51:../Generated_Code/LED2.c **** /* MODULE LED2. */
  52:../Generated_Code/LED2.c **** 
  53:../Generated_Code/LED2.c **** #include "LED2.h"
  54:../Generated_Code/LED2.c **** 
  55:../Generated_Code/LED2.c **** /*
  56:../Generated_Code/LED2.c **** ** ===================================================================
  57:../Generated_Code/LED2.c **** **     Method      :  LED2_On (component LED)
  58:../Generated_Code/LED2.c **** **     Description :
  59:../Generated_Code/LED2.c **** **         This turns the LED on.
  60:../Generated_Code/LED2.c **** **     Parameters  : None
  61:../Generated_Code/LED2.c **** **     Returns     : Nothing
  62:../Generated_Code/LED2.c **** ** ===================================================================
  63:../Generated_Code/LED2.c **** */
  64:../Generated_Code/LED2.c **** /*
  65:../Generated_Code/LED2.c **** ** ===================================================================
  66:../Generated_Code/LED2.c **** **     Method      :  LED2_Off (component LED)
  67:../Generated_Code/LED2.c **** **     Description :
  68:../Generated_Code/LED2.c **** **         This turns the LED off.
  69:../Generated_Code/LED2.c **** **     Parameters  : None
  70:../Generated_Code/LED2.c **** **     Returns     : Nothing
  71:../Generated_Code/LED2.c **** ** ===================================================================
  72:../Generated_Code/LED2.c **** */
  73:../Generated_Code/LED2.c **** /*
  74:../Generated_Code/LED2.c **** void LED2_Off(void)
  75:../Generated_Code/LED2.c **** {
  76:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
  77:../Generated_Code/LED2.c **** }
  78:../Generated_Code/LED2.c **** */
  79:../Generated_Code/LED2.c **** 
  80:../Generated_Code/LED2.c **** /*
  81:../Generated_Code/LED2.c **** ** ===================================================================
  82:../Generated_Code/LED2.c **** **     Method      :  LED2_Neg (component LED)
  83:../Generated_Code/LED2.c **** **     Description :
  84:../Generated_Code/LED2.c **** **         This negates/toggles the LED
  85:../Generated_Code/LED2.c **** **     Parameters  : None
  86:../Generated_Code/LED2.c **** **     Returns     : Nothing
  87:../Generated_Code/LED2.c **** ** ===================================================================
  88:../Generated_Code/LED2.c **** */
  89:../Generated_Code/LED2.c **** /*
  90:../Generated_Code/LED2.c **** void LED2_Neg(void)
  91:../Generated_Code/LED2.c **** {
  92:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
  93:../Generated_Code/LED2.c **** }
  94:../Generated_Code/LED2.c **** */
  95:../Generated_Code/LED2.c **** 
  96:../Generated_Code/LED2.c **** /*
  97:../Generated_Code/LED2.c **** ** ===================================================================
  98:../Generated_Code/LED2.c **** **     Method      :  LED2_Get (component LED)
  99:../Generated_Code/LED2.c **** **     Description :
 100:../Generated_Code/LED2.c **** **         This returns logical 1 in case the LED is on, 0 otherwise.
 101:../Generated_Code/LED2.c **** **     Parameters  : None
 102:../Generated_Code/LED2.c **** **     Returns     :
 103:../Generated_Code/LED2.c **** **         ---             - Status of the LED (on or off)
 104:../Generated_Code/LED2.c **** ** ===================================================================
 105:../Generated_Code/LED2.c **** */
 106:../Generated_Code/LED2.c **** /*
 107:../Generated_Code/LED2.c **** byte LED2_Get(void)
 108:../Generated_Code/LED2.c **** {
 109:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
 110:../Generated_Code/LED2.c **** }
 111:../Generated_Code/LED2.c **** */
 112:../Generated_Code/LED2.c **** 
 113:../Generated_Code/LED2.c **** /*
 114:../Generated_Code/LED2.c **** ** ===================================================================
 115:../Generated_Code/LED2.c **** **     Method      :  LED2_Init (component LED)
 116:../Generated_Code/LED2.c **** **     Description :
 117:../Generated_Code/LED2.c **** **         Performs the LED driver initialization.
 118:../Generated_Code/LED2.c **** **     Parameters  : None
 119:../Generated_Code/LED2.c **** **     Returns     : Nothing
 120:../Generated_Code/LED2.c **** ** ===================================================================
 121:../Generated_Code/LED2.c **** */
 122:../Generated_Code/LED2.c **** /*
 123:../Generated_Code/LED2.c **** void LED2_Init(void)
 124:../Generated_Code/LED2.c **** {
 125:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
 126:../Generated_Code/LED2.c **** }
 127:../Generated_Code/LED2.c **** */
 128:../Generated_Code/LED2.c **** 
 129:../Generated_Code/LED2.c **** /*
 130:../Generated_Code/LED2.c **** ** ===================================================================
 131:../Generated_Code/LED2.c **** **     Method      :  LED2_Put (component LED)
 132:../Generated_Code/LED2.c **** **     Description :
 133:../Generated_Code/LED2.c **** **         Turns the LED on or off.
 134:../Generated_Code/LED2.c **** **     Parameters  :
 135:../Generated_Code/LED2.c **** **         NAME            - DESCRIPTION
 136:../Generated_Code/LED2.c **** **         val             - value to define if the LED has to be on or
 137:../Generated_Code/LED2.c **** **                           off.
 138:../Generated_Code/LED2.c **** **     Returns     : Nothing
 139:../Generated_Code/LED2.c **** ** ===================================================================
 140:../Generated_Code/LED2.c **** */
 141:../Generated_Code/LED2.c **** /*
 142:../Generated_Code/LED2.c **** void LED2_Put(byte val)
 143:../Generated_Code/LED2.c **** {
 144:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
 145:../Generated_Code/LED2.c **** }
 146:../Generated_Code/LED2.c **** */
 147:../Generated_Code/LED2.c **** 
 148:../Generated_Code/LED2.c **** /*
 149:../Generated_Code/LED2.c **** ** ===================================================================
 150:../Generated_Code/LED2.c **** **     Method      :  LED2_Deinit (component LED)
 151:../Generated_Code/LED2.c **** **     Description :
 152:../Generated_Code/LED2.c **** **         Deinitializes the driver
 153:../Generated_Code/LED2.c **** **     Parameters  : None
 154:../Generated_Code/LED2.c **** **     Returns     : Nothing
 155:../Generated_Code/LED2.c **** ** ===================================================================
 156:../Generated_Code/LED2.c **** */
 157:../Generated_Code/LED2.c **** void LED2_Deinit(void)
 158:../Generated_Code/LED2.c **** {
  26              		.loc 1 158 0
  27              		.cfi_startproc
 159:../Generated_Code/LED2.c **** }
  28              		.loc 1 159 0
  29              		@ sp needed for prologue
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE0:
  34              		.section	.text.LED2_SetRatio16,"ax",%progbits
  35              		.align	1
  36              		.global	LED2_SetRatio16
  37              		.code	16
  38              		.thumb_func
  40              	LED2_SetRatio16:
  41              	.LFB1:
 160:../Generated_Code/LED2.c **** 
 161:../Generated_Code/LED2.c **** /*
 162:../Generated_Code/LED2.c **** ** ===================================================================
 163:../Generated_Code/LED2.c **** **     Method      :  LED2_SetRatio16 (component LED)
 164:../Generated_Code/LED2.c **** **     Description :
 165:../Generated_Code/LED2.c **** **         Method to specify the duty cycle. If using a PWM pin, this
 166:../Generated_Code/LED2.c **** **         means the duty cycle is set. For On/off pins, values smaller
 167:../Generated_Code/LED2.c **** **         0x7FFF means off, while values greater means on.
 168:../Generated_Code/LED2.c **** **     Parameters  :
 169:../Generated_Code/LED2.c **** **         NAME            - DESCRIPTION
 170:../Generated_Code/LED2.c **** **         ratio           - Ratio value, where 0 means 'off' and
 171:../Generated_Code/LED2.c **** **                           0xffff means 'on'
 172:../Generated_Code/LED2.c **** **     Returns     : Nothing
 173:../Generated_Code/LED2.c **** ** ===================================================================
 174:../Generated_Code/LED2.c **** */
 175:../Generated_Code/LED2.c **** void LED2_SetRatio16(word ratio)
 176:../Generated_Code/LED2.c **** {
  42              		.loc 1 176 0
  43              		.cfi_startproc
  44              	.LVL0:
 177:../Generated_Code/LED2.c ****   /* on/off LED: binary on or off */
 178:../Generated_Code/LED2.c ****   if (ratio<(0xffff/2)) {
  45              		.loc 1 178 0
  46 0000 064A     		ldr	r2, .L6
 176:../Generated_Code/LED2.c **** {
  47              		.loc 1 176 0
  48 0002 08B5     		push	{r3, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 3, -8
  52              		.cfi_offset 14, -4
  53 0004 064B     		ldr	r3, .L6+4
  54              		.loc 1 178 0
  55 0006 9042     		cmp	r0, r2
  56 0008 03D8     		bhi	.L3
 179:../Generated_Code/LED2.c ****     LED2_Off();
  57              		.loc 1 179 0
  58 000a 9868     		ldr	r0, [r3, #8]
  59              	.LVL1:
  60 000c FFF7FEFF 		bl	BitIoLdd4_SetVal
  61              	.LVL2:
  62 0010 02E0     		b	.L2
  63              	.LVL3:
  64              	.L3:
 180:../Generated_Code/LED2.c ****   } else {
 181:../Generated_Code/LED2.c ****     LED2_On();
  65              		.loc 1 181 0
  66 0012 9868     		ldr	r0, [r3, #8]
  67              	.LVL4:
  68 0014 FFF7FEFF 		bl	BitIoLdd4_ClrVal
  69              	.LVL5:
  70              	.L2:
 182:../Generated_Code/LED2.c ****   }
 183:../Generated_Code/LED2.c **** }
  71              		.loc 1 183 0
  72              		@ sp needed for prologue
  73 0018 08BD     		pop	{r3, pc}
  74              	.L7:
  75 001a C046     		.align	2
  76              	.L6:
  77 001c FE7F0000 		.word	32766
  78 0020 00000000 		.word	PE_LDD_DeviceDataList
  79              		.cfi_endproc
  80              	.LFE1:
  82              		.text
  83              	.Letext0:
  84              		.file 2 "../Generated_Code/PE_Types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LED2.c
C:\Users\Franco\AppData\Local\Temp\ccfd8aOK.s:18     .text.LED2_Deinit:00000000 $t
C:\Users\Franco\AppData\Local\Temp\ccfd8aOK.s:23     .text.LED2_Deinit:00000000 LED2_Deinit
C:\Users\Franco\AppData\Local\Temp\ccfd8aOK.s:35     .text.LED2_SetRatio16:00000000 $t
C:\Users\Franco\AppData\Local\Temp\ccfd8aOK.s:40     .text.LED2_SetRatio16:00000000 LED2_SetRatio16
C:\Users\Franco\AppData\Local\Temp\ccfd8aOK.s:77     .text.LED2_SetRatio16:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BitIoLdd4_SetVal
BitIoLdd4_ClrVal
PE_LDD_DeviceDataList
